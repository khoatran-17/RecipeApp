{"mappings":"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","sources":["./src/js/Search.js","./src/js/base.js","./src/js/searchView.js","./src/js/Recipe.js","./src/js/Like.js","./src/js/likeView.js","./src/js/index.js","./src/js/recipeView.js"],"sourcesContent":["import { key } from './config';\r\n\r\nexport default class Search {\r\n  constructor(query) {\r\n    this.query = query;\r\n  }\r\n\r\n  async getResults() {\r\n    try {\r\n      const res = await fetch(\r\n        `https://forkify-api.herokuapp.com/api/v2/recipes?search=${this.query}&key=${key}`\r\n      );\r\n\r\n      const data = await res.json();\r\n\r\n      // console.log(res);\r\n      // console.log(data);\r\n\r\n      this.results = data.data.recipes;\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  }\r\n}\r\n","export const elements = {\r\n  searchForm: document.querySelector('.search'),\r\n  searchInput: document.querySelector('.search__field'),\r\n  searchResultList: document.querySelector('.results__list'),\r\n  searchResult: document.querySelector('.results'),\r\n  searchResultPages: document.querySelector('.results__pages'),\r\n  recipe: document.querySelector('.recipe'),\r\n  likeIcon: document.querySelector('.recipe__love'),\r\n  likeMenu: document.querySelector('.likes__field'),\r\n  likeList: document.querySelector('.likes__list'),\r\n};\r\n\r\nexport const elementStrings = {\r\n  loader: 'loader',\r\n  btn_inline: 'btn-inline',\r\n  resultsLink: 'results__link',\r\n  resultsLinkActive: 'results__link--active',\r\n};\r\n\r\nexport const renderLoader = (parent) => {\r\n  const loader = `\r\n    <div class=\"${elementStrings.loader}\">\r\n      <i class='bx bx-loader-circle' ></i>\r\n    </div>\r\n    `;\r\n  parent.insertAdjacentHTML('afterbegin', loader);\r\n};\r\n\r\nexport const clearLoader = () => {\r\n  const loader = document.querySelector(`.${elementStrings.loader}`);\r\n  if (loader) {\r\n    loader.parentElement.removeChild(loader);\r\n  }\r\n};\r\n","import { elements, elementStrings } from './base';\r\n\r\nexport const getInput = () => elements.searchInput.value;\r\n\r\nexport const clearInput = () => {\r\n  elements.searchInput.value = '';\r\n};\r\n\r\nexport const clearResults = () => {\r\n  elements.searchResultList.innerHTML = '';\r\n  elements.searchResultPages.innerHTML = '';\r\n};\r\n\r\nexport const highlightSelected = (id) => {\r\n  const resultsArr = Array.from(document.querySelectorAll(`.${elementStrings.resultsLink}`));\r\n  resultsArr.forEach((el) => el.classList.remove(elementStrings.resultsLinkActive));\r\n\r\n  document\r\n    .querySelector(`.results__link[href=\"#${id}\"]`)\r\n    .classList.add(elementStrings.resultsLinkActive);\r\n};\r\n\r\nexport const limitTitle = (title, limit = 30) => {\r\n  const newTitle = [];\r\n  if (title.length > limit) {\r\n    title.split(' ').reduce((acc, curr) => {\r\n      if (acc + curr.length <= limit) {\r\n        newTitle.push(curr);\r\n      }\r\n      return acc + curr.length;\r\n    }, 0);\r\n\r\n    return `${newTitle.join(' ')} ...`;\r\n  }\r\n  return title;\r\n};\r\n\r\nconst createButton = (page, type) => `\r\n          <button class=\"${elementStrings.btn_inline} results__btn--${type}\" data-goto=${\r\n  type === 'prev' ? page - 1 : page + 1\r\n}>\r\n              <span>Page ${type === 'prev' ? page - 1 : page + 1}</span>\r\n\r\n              <i class='bx bxs-skip-${\r\n                type === 'prev' ? 'previous' : 'next'\r\n              }-circle search__icon' ></i>\r\n          </button>\r\n`;\r\n\r\nconst renderButtons = (page, numResults, resPerPage) => {\r\n  const pages = Math.ceil(numResults / resPerPage);\r\n  let button;\r\n\r\n  if (page === 1 && pages > 1) {\r\n    // Button to go to next page\r\n    button = createButton(page, 'next');\r\n  } else if (page < pages) {\r\n    // Both buttons\r\n    button = `\r\n    ${createButton(page, 'prev')}\r\n    ${createButton(page, 'next')}\r\n    `;\r\n  } else if (page === pages && pages > 1) {\r\n    // Button to go to previous page\r\n    button = createButton(page, 'prev');\r\n  }\r\n\r\n  elements.searchResultPages.insertAdjacentHTML('afterbegin', button);\r\n};\r\n\r\nconst renderRecipe = (currRecipe) => {\r\n  const markup = `\r\n          <li>\r\n            <a class=\"results__link\" href=\"#${currRecipe.id}\">\r\n              <figure class=\"results__fig\">\r\n                <img src=\"${currRecipe.image_url}\" alt=\"${currRecipe.title}\">\r\n              </figure>\r\n              <div class=\"results__data\">\r\n                <h4 class=\"results__name\">${limitTitle(currRecipe.title)}</h4>\r\n                <p class=\"results__author\">${currRecipe.publisher}</p>\r\n              </div>\r\n              <i class='bx bxs-tag-alt results__arrow'></i>\r\n            </a>\r\n          </li>\r\n          `;\r\n\r\n  elements.searchResultList.insertAdjacentHTML('beforeend', markup);\r\n};\r\n\r\nexport const renderResults = (recipesArr, page = 1, resPerPage = 10) => {\r\n  // Redner results of current page\r\n  const start = (page - 1) * resPerPage;\r\n  const end = page * resPerPage;\r\n\r\n  recipesArr.slice(start, end).forEach((curr) => renderRecipe(curr));\r\n\r\n  // Render pagination buttons\r\n  renderButtons(page, recipesArr.length, resPerPage);\r\n};\r\n","import { key } from './config';\r\n\r\nconst evalString = (string) => {\r\n  return Function('\"use strict\";return (' + string + ')')();\r\n};\r\n\r\nexport default class Recipe {\r\n  constructor(id) {\r\n    this.id = id;\r\n  }\r\n\r\n  async getRecipe() {\r\n    try {\r\n      const res = await fetch(\r\n        `https://forkify-api.herokuapp.com/api/v2/recipes/${this.id}?key=${key}`\r\n      );\r\n\r\n      const data = await res.json();\r\n\r\n      this.title = data.data.recipe.title;\r\n      this.author = data.data.recipe.publisher;\r\n      this.img = data.data.recipe.image_url;\r\n      this.url = data.data.recipe.source_url;\r\n      this.ingredients = data.data.recipe.ingredients;\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  }\r\n\r\n  calcTime() {\r\n    // Assume we need 15min per 3 ingredients\r\n    const numIng = this.ingredients.length;\r\n    this.time = Math.ceil(numIng / 3) * 15;\r\n  }\r\n\r\n  calcServings() {\r\n    this.servings = 4;\r\n  }\r\n\r\n  parseIngredients() {\r\n    const newIngredients = this.ingredients.map((el) => {\r\n      // 1) Uniform units\r\n      let ingredient = el.description.toLowerCase();\r\n\r\n      // 2) Remove parentheses\r\n      ingredient = ingredient.replace(/ *\\([^)]*\\) */g, ' ');\r\n\r\n      let ingObj;\r\n\r\n      // There is BOTH a quantity and a unit\r\n      if (el.quantity != null) {\r\n        ingObj = {\r\n          count: el.quantity,\r\n          unit: el.unit,\r\n          ingredient: ingredient,\r\n        };\r\n      } else {\r\n        ingObj = {\r\n          count: 1,\r\n          unit: el.unit,\r\n          ingredient: ingredient,\r\n        };\r\n      }\r\n\r\n      return ingObj;\r\n    });\r\n\r\n    this.ingredients = newIngredients;\r\n  }\r\n}\r\n","export default class Like {\r\n  constructor() {\r\n    this.likes = [];\r\n  }\r\n\r\n  addLike(id, title, author, img) {\r\n    const like = {\r\n      id,\r\n      title,\r\n      author,\r\n      img,\r\n    };\r\n\r\n    this.likes.push(like);\r\n\r\n    // Persist data in localStorage\r\n    this.persistData();\r\n\r\n    return like;\r\n  }\r\n\r\n  deleteLike(id) {\r\n    const index = this.likes.findIndex((curr) => curr.id === id);\r\n    this.likes.splice(index, 1);\r\n\r\n    // Persist data in localStorage\r\n    this.persistData();\r\n  }\r\n\r\n  isLiked(id) {\r\n    return this.likes.findIndex((curr) => curr.id === id) !== -1;\r\n  }\r\n\r\n  getNumLikes() {\r\n    return this.likes.length;\r\n  }\r\n\r\n  persistData() {\r\n    localStorage.setItem('like', JSON.stringify(this.likes));\r\n  }\r\n\r\n  readStorage() {\r\n    const storage = JSON.parse(localStorage.getItem('like'));\r\n\r\n    // Restore likes from the local storage\r\n    if (storage) this.likes = storage;\r\n  }\r\n}\r\n","import { elements } from './base';\r\nimport { limitTitle } from './searchView';\r\n\r\nexport const toggleLikeBtn = (isLiked) => {\r\n  const iconString = isLiked ? 'bxs' : 'bx';\r\n  // Can select a certain child element of a parent element like '.recipe__love use'\r\n  document.querySelector('.recipe__love i').setAttribute('class', `bx ${iconString}-heart`);\r\n};\r\n\r\nexport const toggleLikeMenu = (numLikes) => {\r\n  elements.likeMenu.style.visibility = numLikes > 0 ? 'visible' : 'hidden';\r\n};\r\n\r\nexport const renderLike = (like) => {\r\n  const markup = `\r\n        <li>\r\n            <a class=\"likes__link\" href=\"#${like.id}\">\r\n                <figure class=\"likes__fig\">\r\n                    <img src=\"${like.img}\" alt=\"Test\">\r\n                </figure>\r\n                <div class=\"likes__data\">\r\n                    <h4 class=\"likes__name\">${limitTitle(like.title)}</h4>\r\n                    <p class=\"likes__author\">${like.author}</p>\r\n                </div>\r\n            </a>\r\n        </li>\r\n    `;\r\n\r\n  elements.likeList.insertAdjacentHTML('beforeend', markup);\r\n};\r\n\r\nexport const deleteLikeItem = (id) => {\r\n  const element = document.querySelector(`.likes__link[href='#${id}']`).parentElement;\r\n  if (element) element.parentElement.removeChild(element);\r\n};\r\n","import Search from './Search';\r\nimport * as searchView from './searchView';\r\nimport Recipe from './Recipe';\r\nimport * as recipeView from './recipeView';\r\nimport Like from './Like';\r\nimport * as likeView from './likeView';\r\nimport { elements, elementStrings, renderLoader, clearLoader } from './base';\r\n\r\n/** Global state of the app\r\n * - Search object\r\n * - Current recipe object\r\n * - Shopping list object\r\n * - Liked recipes\r\n */\r\n\r\nconst state = {};\r\n\r\n// The user SEARCHES for a keyword in the recipe bar\r\nelements.searchForm.addEventListener('submit', (event) => {\r\n  // Prevent default action from occuring, in this case it prevent reloading the page\r\n  // submitting a form.\r\n  event.preventDefault();\r\n  controlSearch();\r\n});\r\n\r\n// Render the PREV or NEXT page of results from the recipe result list\r\nelements.searchResultPages.addEventListener('click', (event) => {\r\n  const btn = event.target.closest(`.${elementStrings.btn_inline}`);\r\n  if (btn) {\r\n    const goToPage = parseInt(btn.dataset.goto);\r\n    searchView.clearResults();\r\n    searchView.renderResults(state.search.results, goToPage);\r\n  }\r\n});\r\n\r\n/**\r\n * SEARCH CONTROLLER\r\n */\r\nconst controlSearch = async () => {\r\n  // 1) Get query from view\r\n  const query = searchView.getInput();\r\n\r\n  if (query) {\r\n    // 2) New search object and add to state\r\n    state.search = new Search(query);\r\n\r\n    // 3) Prepare UI for results\r\n    searchView.clearInput();\r\n    searchView.clearResults();\r\n    renderLoader(elements.searchResult);\r\n\r\n    try {\r\n      // 4) Search for recipes\r\n      await state.search.getResults();\r\n\r\n      // 5) Render results on UI\r\n      clearLoader();\r\n      searchView.renderResults(state.search.results);\r\n    } catch (error) {\r\n      clearLoader();\r\n      alert(error);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * RECIPE CONTROLLER\r\n */\r\n// DISPLAY the recipe selected using the hash key from the url\r\nconst controlRecipe = async () => {\r\n  // 1) Get ID from url\r\n  const id = window.location.hash.replace('#', '');\r\n\r\n  if (id) {\r\n    // Prepare the UI for changes\r\n    recipeView.clearRecipe();\r\n    renderLoader(elements.recipe);\r\n\r\n    // Highlight selected search item\r\n    if (state.search) searchView.highlightSelected(id);\r\n\r\n    // Create new recipe object\r\n    state.recipe = new Recipe(id);\r\n\r\n    try {\r\n      // Get recipe data\r\n      await state.recipe.getRecipe();\r\n      state.recipe.parseIngredients();\r\n\r\n      // Calc time and servings\r\n      state.recipe.calcTime();\r\n      state.recipe.calcServings();\r\n\r\n      // Render recipe\r\n      clearLoader();\r\n      recipeView.renderRecipe(state.recipe, state.like.isLiked(id));\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  }\r\n};\r\n\r\n// Render the SELECTED when the user clicks on the item using the hash value\r\n['hashchange', 'load'].forEach((event) => window.addEventListener(event, controlRecipe));\r\n\r\n/**\r\n * LIKE CONTROLLER\r\n */\r\nconst controlLike = () => {\r\n  if (!state.like) state.like = new Like();\r\n\r\n  const currentID = state.recipe.id;\r\n\r\n  // Use has not yet liked current recipe\r\n  if (!state.like.isLiked(currentID)) {\r\n    // Add like to the state\r\n    const newLike = state.like.addLike(\r\n      currentID,\r\n      state.recipe.title,\r\n      state.recipe.author,\r\n      state.recipe.img\r\n    );\r\n\r\n    // Toggle the like button\r\n    likeView.toggleLikeBtn(true);\r\n\r\n    // Add like to UI list\r\n    likeView.renderLike(newLike);\r\n\r\n    // User HAS liked current recipe\r\n  } else {\r\n    // Remove like from the state\r\n    state.like.deleteLike(currentID);\r\n\r\n    // Toggle the like button\r\n    likeView.toggleLikeBtn(false);\r\n\r\n    // Remove like from UI list\r\n    likeView.deleteLikeItem(currentID);\r\n  }\r\n\r\n  likeView.toggleLikeMenu(state.like.getNumLikes());\r\n};\r\n\r\n// Restore liked recipes on page load\r\nwindow.addEventListener('load', () => {\r\n  state.like = new Like();\r\n\r\n  // Restore likes\r\n  state.like.readStorage();\r\n\r\n  // Toggle like menu button\r\n  likeView.toggleLikeMenu(state.like.getNumLikes());\r\n\r\n  // Render the existing likes\r\n  state.like.likes.forEach((curr) => likeView.renderLike(curr));\r\n});\r\n\r\n// Handling the LIKE button clicks\r\nelements.recipe.addEventListener('click', (event) => {\r\n  if (event.target.matches('.recipe__love, .recipe__love *')) {\r\n    // Add to liked recipe\r\n    controlLike();\r\n  }\r\n});\r\n","import { elements } from './base';\r\n\r\nexport const clearRecipe = () => (elements.recipe.innerHTML = '');\r\n\r\nconst createIngredient = (ingredient) => `\r\n            <li class=\"recipe__item\">\r\n                <i class='bx bxs-check-square recipe__icon' ></i>\r\n                <div class=\"recipe__count\">${ingredient.count}</div>\r\n                <div class=\"recipe__ingredient\">\r\n                     <span class=\"recipe__unit\">${ingredient.unit}</span>\r\n                    ${ingredient.ingredient}\r\n                </div>\r\n            </li>\r\n`;\r\n\r\nexport const renderRecipe = (recipe, isLiked) => {\r\n  const markup = `\r\n            <figure class=\"recipe__fig\">\r\n                <img src=\"${recipe.img}\" alt=\"${recipe.title}\" class=\"recipe__img\">\r\n                <h1 class=\"recipe__title\">\r\n                    <span>${recipe.title}</span>\r\n                </h1>\r\n            </figure>\r\n\r\n            <div class=\"recipe__details\">\r\n                <div class=\"recipe__info\">\r\n                    <i class='bx bxs-time-five' ></i>\r\n                    <span class=\"recipe__info-data recipe__info-data--minutes\">${recipe.time}</span>\r\n                    <span class=\"recipe__info-text\"> minutes</span>\r\n                </div>\r\n                <div class=\"recipe__info\">\r\n                    <i class='bx bxs-user'></i>\r\n                    <span class=\"recipe__info-data recipe__info-data--people\">${\r\n                      recipe.servings\r\n                    }</span>\r\n                    <span class=\"recipe__info-text\"> servings</span>\r\n\r\n                </div>\r\n                <button class=\"recipe__love\">\r\n                    <i class=\"bx ${isLiked ? 'bxs' : 'bx'}-heart\" ></i>\r\n                </button>\r\n            </div>\r\n\r\n            <div class=\"recipe__ingredients\">\r\n                <ul class=\"recipe__ingredient-list\">\r\n                    ${recipe.ingredients.map((el) => createIngredient(el)).join('')}\r\n                </ul>\r\n            </div>\r\n\r\n            <div class=\"recipe__directions\">\r\n                <h2 class=\"heading-2\">How to cook it</h2>\r\n                <p class=\"recipe__directions-text\">\r\n                    This recipe was created by\r\n                    <span class=\"recipe__by\">${\r\n                      recipe.author\r\n                    }</span>. Find out more details about the recipe here.\r\n                </p>\r\n                <a class=\"btn-small recipe__btn\" href=\"${recipe.url}\" target=\"_blank\">\r\n                    <span>Directions</span>\r\n                    <i class='bx bxs-book-content'></i>\r\n                </a>\r\n            </div>\r\n    `;\r\n\r\n  elements.recipe.insertAdjacentHTML('afterbegin', markup);\r\n};\r\n"],"names":["$f8919b4807a0aa5c5919e2396712cf32$export$default","constructor","query","this","res","fetch","data","json","results","recipes","error","alert","$32f79020b4a83d63d9c6a38da3658a87$export$elements","searchForm","document","querySelector","searchInput","searchResultList","searchResult","searchResultPages","recipe","likeIcon","likeMenu","likeList","$32f79020b4a83d63d9c6a38da3658a87$export$elementStrings","$32f79020b4a83d63d9c6a38da3658a87$export$renderLoader","parent","loader","insertAdjacentHTML","$32f79020b4a83d63d9c6a38da3658a87$export$clearLoader","parentElement","removeChild","$e6fa4c718fd17961f25f7f8e006e7cad$export$clearResults","innerHTML","$e6fa4c718fd17961f25f7f8e006e7cad$export$limitTitle","title","limit","newTitle","length","split","reduce","acc","curr","push","join","$e6fa4c718fd17961f25f7f8e006e7cad$var$createButton","page","type","$e6fa4c718fd17961f25f7f8e006e7cad$export$renderResults","recipesArr","resPerPage","start","end","slice","forEach","currRecipe","markup","id","image_url","publisher","$e6fa4c718fd17961f25f7f8e006e7cad$var$renderRecipe","numResults","pages","Math","ceil","button","$e6fa4c718fd17961f25f7f8e006e7cad$var$renderButtons","$f52761c9ae54d1235e5010e15ca6ffcb$export$default","author","img","url","source_url","ingredients","calcTime","numIng","time","calcServings","servings","parseIngredients","newIngredients","map","el","ingObj","ingredient","description","toLowerCase","replace","quantity","count","unit","$cddbe06ad95a7a60e6c41b542467903b$export$default","likes","addLike","like","persistData","deleteLike","index","findIndex","splice","isLiked","getNumLikes","localStorage","setItem","JSON","stringify","readStorage","storage","parse","getItem","$1db156ee2895b0d6244060b9ed5702e5$export$toggleLikeBtn","iconString","setAttribute","$1db156ee2895b0d6244060b9ed5702e5$export$toggleLikeMenu","numLikes","style","visibility","$1db156ee2895b0d6244060b9ed5702e5$export$renderLike","$d6b9f3b7bb422303e34961b12f2cabef$var$state","addEventListener","event","preventDefault","$d6b9f3b7bb422303e34961b12f2cabef$var$controlSearch","btn","target","closest","goToPage","parseInt","dataset","goto","search","async","value","getResults","$d6b9f3b7bb422303e34961b12f2cabef$var$controlRecipe","window","location","hash","Array","from","querySelectorAll","classList","remove","add","getRecipe","$b8ab326a38f56f024e3b689d72a2af72$var$createIngredient","$d6b9f3b7bb422303e34961b12f2cabef$var$controlLike","currentID","element","newLike","matches"],"version":3,"file":"index.HASH_REF_1cafb51efe5618b2f69b10c35ec1438f.js.map"}