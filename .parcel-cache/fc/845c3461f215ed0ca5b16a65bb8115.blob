var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _base = require('./base');
require('./config');
class addRecipeView {
  constructor() {
    this.toggleUserRecipe();
  }
  toggleUserRecipe() {
    _base.elements.recipeOverlay.classList.toggle('hidden');
    _base.elements.recipeWindow.classList.toggle('hidden');
  }
  submitUserRecipe(event) {
    const self = this;
    try {
      event.preventDefault();
      const formDataArr = [...new FormData(this)];
      const ingredients = formDataArr.filter(input => {
        return input[0].startsWith('ingredient') && input[1] !== '';
      });
      const ingredientsSplit = ingredients.map(ing => {
        const ingArr = ing[1].replaceAll(' ', '').split(',');
        if (ingArr.length !== 3) throw new Error('Ingredient input invalid!');
        return ingArr;
      });
      const newRecipe = Object.fromEntries(formDataArr);
      const recipe = {
        title: newRecipe.title,
        source_url: newRecipe.sourceUrl,
        image_url: newRecipe.image,
        publisher: newRecipe.publisher,
        cooking_time: +newRecipe.cookingTime,
        servings: +newRecipe.servings,
        ingredients: ingredientsSplit
      };
      self.persistUserRecipeData(recipe);
    } catch (error) {
      window.alert(error);
    }
  }
  persistUserRecipeData(recipeObj) {
    // try {
    // let url = `https://forkify-api.herokuapp.com/api/v2/recipes?key=${key}`;
    // const fetch = fetch(url, {
    // method: 'POST',
    // headers: {
    // 'Content-Type': 'application/json',
    // },
    // body: JSON.stringify(recipeObj),
    // });
    // const res = await Promise.race([fetch, timeout(10)]);
    // const data = await res.json();
    // if (!res.ok) throw new Error(`${data.message} (${res.status})`);
    // return data;
    // } catch (error) {
    // window.alert(error);
    // }
    const userRecipe = JSON.stringify(recipeObj);
    console.log(userRecipe);
  }
}
exports.default = addRecipeView;
