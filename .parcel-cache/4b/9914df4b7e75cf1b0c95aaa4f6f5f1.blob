class e{constructor(e){this.query=e}async getResults(){try{const e=await fetch(`https://forkify-api.herokuapp.com/api/v2/recipes?search=${this.query}&key=2873f46c-8e8a-4d73-bb2a-1f46b1e47edc`),s=await e.json();this.results=s.data.recipes}catch(e){alert(e)}}}const s={searchForm:document.querySelector(".search"),searchInput:document.querySelector(".search__field"),searchResultList:document.querySelector(".results__list"),searchResult:document.querySelector(".results"),searchResultPages:document.querySelector(".results__pages"),recipe:document.querySelector(".recipe"),likeIcon:document.querySelector(".recipe__love"),likeMenu:document.querySelector(".likes__field"),likeList:document.querySelector(".likes__list"),addRecipeBtn:document.querySelector(".nav__btn--add-recipe"),recipeWindow:document.querySelector(".add-recipe-window"),recipeOverlay:document.querySelector(".overlay"),closeUserRecipe:document.querySelector(".btn--close"),userRecipeForm:document.querySelector(".upload"),userList:document.querySelector(".user__list")},i="loader",t="btn-inline",n="results__link",r="results__link--active",c=e=>{const s=`\n    <div class="${i}">\n      <i class='bx bx-loader-circle' ></i>\n    </div>\n    `;e.insertAdjacentHTML("afterbegin",s)},a=()=>{const e=document.querySelector(`.${i}`);e&&e.parentElement.removeChild(e)},l=()=>{s.searchResultList.innerHTML="",s.searchResultPages.innerHTML=""},o=(e,s=25)=>{const i=[];return e.length>s?(e.split(" ").reduce(((e,t)=>(e+t.length<=s&&i.push(t),e+t.length)),0),`${i.join(" ")} ...`):e},d=(e,s)=>{let i;return i="hidden"===s?`<button class="${t} results__btn--hidden">\n                      <span>HiddenBtn</span>\n                    </button>`:`<button class="${t} results__btn--${s}" data-goto=${"prev"===s?e-1:e+1}>\n              <span>Page ${"prev"===s?e-1:e+1}</span>\n\n              <i class='bx bxs-skip-${"prev"===s?"previous":"next"}-circle search__icon' ></i>\n          </button>\n`,i},u=(e,i=1,t=8)=>{const n=(i-1)*t,r=i*t;e.slice(n,r).forEach((e=>(e=>{const i=`\n          <li class="glass">\n            <a class="results__link" href="#${e.id}">\n              <figure class="results__fig">\n                <img src="${e.image_url}" alt="${e.title}">\n              </figure>\n              <div class="results__data">\n                <h4 class="results__name">${o(e.title)}</h4>\n                <p class="results__author">${e.publisher}</p>\n              </div>\n            </a>\n          </li>\n          `;s.searchResultList.insertAdjacentHTML("beforeend",i)})(e))),((e,i,t)=>{const n=Math.ceil(i/t);let r;1===e&&n>1?r=`\n    ${d(e,"hidden")}\n    ${d(e,"next")}\n    `:e<n?r=`\n    ${d(e,"prev")}\n    ${d(e,"next")}\n    `:e===n&&n>1&&(r=d(e,"prev")),s.searchResultPages.insertAdjacentHTML("afterbegin",r)})(i,e.length,t)};class p{constructor(e){this.id=e}async getRecipe(){try{const e=await fetch(`https://forkify-api.herokuapp.com/api/v2/recipes/${this.id}?key=2873f46c-8e8a-4d73-bb2a-1f46b1e47edc`),s=await e.json();this.title=s.data.recipe.title,this.author=s.data.recipe.publisher,this.img=s.data.recipe.image_url,this.url=s.data.recipe.source_url,this.ingredients=s.data.recipe.ingredients,this.time=s.data.recipe.cooking_time,this.servings=s.data.recipe.servings}catch(e){alert(e)}}parseIngredients(){const e=this.ingredients.map((e=>{let s,i=e.description.toLowerCase();return i=i.replace(/ *\([^)]*\) */g," "),s=null!=e.quantity?{count:e.quantity,unit:e.unit,ingredient:i}:{count:1,unit:e.unit,ingredient:i},s}));this.ingredients=e}}class h{constructor(){this.likes=[]}addLike(e,s,i,t){const n={id:e,title:s,author:i,img:t};return this.likes.push(n),this.persistData(),n}deleteLike(e){const s=this.likes.findIndex((s=>s.id===e));this.likes.splice(s,1),this.persistData()}isLiked(e){return-1!==this.likes.findIndex((s=>s.id===e))}getNumLikes(){return this.likes.length}persistData(){localStorage.setItem("like",JSON.stringify(this.likes))}readStorage(){const e=JSON.parse(localStorage.getItem("like"));e&&(this.likes=e)}}const _=e=>{const s=e?"bxs":"bx";document.querySelector(".recipe__love i").setAttribute("class",`bx ${s}-heart`)},g=e=>{s.likeMenu.style.visibility=e>0?"visible":"hidden"},m=e=>{const i=`\n        <li>\n            <a class="likes__link glass" href="#${e.id}&like" >\n                <figure class="likes__fig">\n                    <img src="${e.img}" alt="Liked Recipe Image">\n                </figure>\n                <div class="likes__data">\n                    <h4 class="likes__name">${o(e.title)}</h4>\n                    <p class="likes__author">${e.author}</p>\n                </div>\n            </a>\n        </li>\n    `;s.likeList.insertAdjacentHTML("beforeend",i)};class k{constructor(){this.userRecipes=[],this.toggleUserRecipe()}toggleUserRecipe(){s.recipeOverlay.classList.toggle("hidden"),s.recipeWindow.classList.toggle("hidden")}submitUserRecipe(e){e.preventDefault();const s=[...new FormData(this)],i=s.filter((e=>e[0].startsWith("ingredient")&&""!==e[1])).map((e=>{const s=e[1].replaceAll(" ","").split(",");if(3!==s.length)throw new Error("Ingredient input invalid!");return s})),t=Object.fromEntries(s),n={title:t.title,publisher:t.publisher,cooking_time:+t.cookingTime,servings:+t.servings,ingredients:i};let r=JSON.parse(localStorage.getItem("userRecipe"));r?r.push(n):r=[n],localStorage.setItem("userRecipe",JSON.stringify(r))}renderUserRecipe(e){let i=JSON.parse(localStorage.getItem("userRecipe"));const t=i[i.length-1];console.log(t);const n=`\n        <li>\n            <a class="likes__link glass" href="#TEST&userRecipe" >\n                <figure class="likes__fig">\n                    <img src="cookUserImg.476f2eda.png" alt="User Recipe Image">\n                </figure>\n                <div class="likes__data">\n                    <h4 class="likes__name">${o(t.title)}</h4>\n                    <p class="likes__author">${t.publisher}</p>\n                </div>\n            </a>\n        </li>\n    `;s.userList.insertAdjacentHTML("beforeend",n)}}const v={};s.searchForm.addEventListener("submit",(e=>{e.preventDefault(),f()})),s.searchResultPages.addEventListener("click",(e=>{const s=e.target.closest(`.${t}`);if(s){const e=parseInt(s.dataset.goto);l(),u(v.search.results,e)}}));const f=async()=>{const i=s.searchInput.value;if(i){v.search=new e(i),s.searchInput.value="",l(),c(s.searchResult);try{await v.search.getResults(),a(),u(v.search.results)}catch(e){a(),alert(e)}}},b=async e=>{const i=window.location.hash;if(i.includes("#")){const e=i.split("#")[1].split("&"),t=e[0],l=e[1];if(t){s.recipe.innerHTML="",c(s.recipe),v.search&&!l&&(e=>{Array.from(document.querySelectorAll(`.${n}`)).forEach((e=>e.classList.remove(r))),document.querySelector(`.results__link[href="#${e}"]`).classList.add(r)})(t),v.recipe=new p(t);try{await v.recipe.getRecipe(),v.recipe.parseIngredients(),a(),((e,i)=>{const t=`\n            <figure class="recipe__fig">\n                <img src="${e.img}" alt="${e.title}" class="recipe__img">\n                <h1 class="recipe__title">\n                    <span>${e.title}</span>\n                </h1>\n            </figure>\n\n            <div class="recipe__details">\n                <div class="recipe__info">\n                    <i class='bx bxs-time-five' ></i>\n                    <span class="recipe__info-data recipe__info-data--minutes">${e.time}</span>\n                    <span class="recipe__info-text"> minutes</span>\n                </div>\n                <div class="recipe__info">\n                    <i class='bx bxs-user'></i>\n                    <span class="recipe__info-data recipe__info-data--people">${e.servings}</span>\n                    <span class="recipe__info-text"> servings</span>\n\n                </div>\n                <button class="recipe__love">\n                    <i class="bx ${i?"bxs":"bx"}-heart" ></i>\n                </button>\n            </div>\n\n            <div class="recipe__ingredients">\n                <ul class="recipe__ingredient-list">\n                    ${e.ingredients.map((e=>{return`\n            <li class="recipe__item">\n                <i class='bx bxs-check-square recipe__icon' ></i>\n                <div class="recipe__count">${(s=e).count}</div>\n                <div class="recipe__ingredient">\n                     <span class="recipe__unit">${s.unit}</span>\n                    ${s.ingredient}\n                </div>\n            </li>\n`;var s})).join("")}\n                </ul>\n            </div>\n\n            <div class="recipe__directions">\n                <h2 class="heading-2">How to cook it</h2>\n                <p class="recipe__directions-text">\n                    This recipe was created by\n                    <span class="recipe__by">${e.author}</span>. Find out more details about the recipe below.\n                </p>\n                <a class="btn-small recipe__btn" href="${e.url}" target="_blank">\n                    <span>Directions</span>\n                    <i class='bx bxs-book-content'></i>\n                </a>\n            </div>\n    `;s.recipe.classList.add("glass"),s.recipe.insertAdjacentHTML("afterbegin",t)})(v.recipe,v.like.isLiked(t))}catch(e){alert(e)}}}};["hashchange","load"].forEach((e=>window.addEventListener(e,b)));const y=()=>{v.like||(v.like=new h);const e=v.recipe.id;if(v.like.isLiked(e))v.like.deleteLike(e),_(!1),(e=>{const s=document.querySelector(`.likes__link[href='#${e}&like']`).parentElement;s&&s.parentElement.removeChild(s)})(e);else{const s=v.like.addLike(e,v.recipe.title,v.recipe.author,v.recipe.img);_(!0),m(s)}g(v.like.getNumLikes())};window.addEventListener("load",(()=>{v.like=new h,v.like.readStorage(),g(v.like.getNumLikes()),v.like.likes.forEach((e=>m(e)))})),s.recipe.addEventListener("click",(e=>{e.target.matches(".recipe__love, .recipe__love *")&&y()}));s.addRecipeBtn.addEventListener("click",(()=>{v.userRecipe=new k,[s.closeUserRecipe,s.recipeOverlay].forEach((e=>e.addEventListener("click",v.userRecipe.toggleUserRecipe))),s.userRecipeForm.addEventListener("submit",v.userRecipe.submitUserRecipe),s.userRecipeForm.addEventListener("submit",v.userRecipe.renderUserRecipe)}));
//# sourceMappingURL=index.HASH_REF_1cafb51efe5618b2f69b10c35ec1438f.js.map
