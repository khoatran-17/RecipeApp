var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _base = require('./base');
require('./config');
var _searchView = require('./searchView');
class addRecipeView {
  constructor() {
    this.userRecipes = [];
    this.toggleUserRecipe();
  }
  toggleUserRecipe() {
    _base.elements.recipeOverlay.classList.toggle('hidden');
    _base.elements.recipeWindow.classList.toggle('hidden');
  }
  submitUserRecipe(event) {
    event.preventDefault();
    // Get all the form data
    const formDataArr = [...new FormData(this)];
    // Get the ingredients section only and split them into parts
    const ingredients = formDataArr.filter(input => {
      return input[0].startsWith('ingredient') && input[1] !== '';
    });
    const ingredientsSplit = ingredients.map(ing => {
      const ingArr = ing[1].replaceAll(' ', '').split(',');
      if (ingArr.length !== 3) throw new Error('Ingredient input invalid!');
      return ingArr;
    });
    // Get the form data as an object and get the neccessary info
    const newRecipe = Object.fromEntries(formDataArr);
    const recipe = {
      title: newRecipe.title,
      publisher: newRecipe.publisher,
      cooking_time: +newRecipe.cookingTime,
      servings: +newRecipe.servings,
      ingredients: ingredientsSplit
    };
    // Check if there are user recipes available already
    let allUserRecipes = JSON.parse(localStorage.getItem('userRecipe'));
    if (allUserRecipes) {
      allUserRecipes.push(recipe);
    } else {
      allUserRecipes = [recipe];
    }
    localStorage.setItem('userRecipe', JSON.stringify(allUserRecipes));
  }
  renderUserRecipe(e) {
    let allUserRecipes = JSON.parse(localStorage.getItem('userRecipe'));
    const recipe = allUserRecipes[allUserRecipes.length - 1];
    console.log(recipe);
    const markup = `
        <li>
            <a class="likes__link glass" href="#${'TEST'}&userRecipe" >
                <figure class="likes__fig">
                    <img src="src/img/cookUserImg.png" alt="User Recipe Image">
                </figure>
                <div class="likes__data">
                    <h4 class="likes__name">${_searchView.limitTitle(recipe.title)}</h4>
                    <p class="likes__author">${recipe.publisher}</p>
                </div>
            </a>
        </li>
    `;
    _base.elements.userList.insertAdjacentHTML('beforeend', markup);
  }
}
exports.default = addRecipeView;
